# This file contains only the sections related to the probe configuratioo
# THIS IS NOT A CEMPLETE KLIPPER PRINTER CONFIGURATION
#
# You need to adjust some values to your printer and probe mounting dimensions
# This paricular config ia based on my tri-zero usinge the Ghost-LG toolhead and a euklid probe
# that docks into the servo-klicky 
# 
# The pin configuration is for a SKR Pico board.
# Note: You need to add a jumper on the pico to enablke the servo pins (see PICO manual for details) 


[include euklid.cfg]


#####################################################################
#      Additiponal Components 
#####################################################################


#################################
#      Probing 
#################################

[servo probe_servo]
pin: gpio29
#   PWM output pin controlling the servo. This parameter must be
#   provided.
maximum_servo_angle: 140
#   The maximum angle (in degrees) that this servo can be set to. The
#   default is 180 degrees.
minimum_pulse_width: 0.0008
#   The minimum pulse width time (in seconds). This should correspond
#   with an angle of 0 degrees. The default is 0.001 seconds.
maximum_pulse_width: 0.0022
#   The maximum pulse width time (in seconds). This should correspond
#   with an angle of maximum_servo_angle. The default is 0.002
#   seconds.
initial_angle: 115
#   Initial angle (in degrees) to set the servo to. The default is to
#   not send any signal at startup.
#initial_pulse_width:
#   Initial pulse width time (in seconds) to set the servo to. (This
#   is only valid if initial_angle is not set.) The default is to not
#   send any signal at startup.


[probe]
pin: EBBCan: PB8        # Adjust to your board
x_offset: -23           # Adjust to your probe mount
y_offset: -10.0         # Adjust to your probe mount

#z_offset: 7.05  # this value is from the probe result using feeler gauge to set Z height 
#   The distance (in mm) between the bed and the nozzle when the probe
#   triggers. This parameter must be provided.
speed: 5
samples: 2
samples_result: average
sample_retract_dist: 5.0
samples_tolerance: 0.005
samples_tolerance_retries: 3
lift_speed: 30



#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################



[homing_override]
axes: z
gcode:
    {% set euclid_probe = printer["gcode_macro EuclidProbe"] %}

    QUERY_PROBE
    _ASSERT_PROBE_STATE MUST_BE=stowed

    # ensure the servo dock is in park position !!
    # homing z with the dock exposed might kill the servo gears !!
    SET_SERVO SERVO=probe_servo ANGLE=115

    G28 X
    G28 Y
    G1 X60 Y20 F4000

    G28 Z
    G1 Z25 



[z_tilt]
z_positions:
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the X, Y position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
  60,130
  -45,10
  165,10

points:
#   A list of X, Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
  85,110
  30,5
  120,5

speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 15
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
retries: 5
#   Number of times to retry if the probed points aren't within
#   tolerance.
retry_tolerance: 0.005
#   If retries are enabled then retry if largest and smallest probed
#   points differ more than retry_tolerance. Note the smallest unit of
#   change here would be a single step. However if you are probing
#   more points than steppers then you will likely have a fixed
#   minimum value for the range of probed points which you can learn
#   by observing command output.


[bed_mesh]
speed: 100
horizontal_move_z: 14
mesh_min: 10, 0
mesh_max: 95, 80
probe_count: 4, 4

